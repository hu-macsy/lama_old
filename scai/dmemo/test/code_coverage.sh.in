#
#  @file code_coverage.sh
# 
#  @license
#  Copyright (c) 2009-2013
#  Fraunhofer Institute for Algorithms and Scientific Computing SCAI
#  for Fraunhofer-Gesellschaft
# 
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
# 
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
# 
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#  @endlicense
# 
#  @brief This file is a shellscript, which contains all necessary steps to 
#         measure code coverage of LAMA.
#  @author: Alexander BÃ¼chel, Lauretta Schubert
#  @date 15.08.2012
#  @since 1.0.0
#

#!/bin/bash

. ../../scai_code_coverage_functions.sh

prepare_coverage

export SCAI_LOG=TRACE
export SCAI_TRACE=time
	
# Running tests serial
echo "Running serial tests"
./dmemoTest >/dev/null
if [ $? -ne 0 ]
then
	echo "ERROR in dmemoTest"
	error_count=$(($error_count + $?))
fi

if [ -d distributed ];
then
    # Running parallel tests
    for i in 2 3 4;
    do
        echo "Running distributed tests with $i processes"
        mpirun -np $i ./dmemoTest >/dev/null
        if [ $? -ne 0 ]
        then
            echo "ERROR in dmemoTest"
            error_count=$(($error_count + $?))
        fi
    done
    cd ..
fi
    
do_coverage

zip -r ../dmemo_coverage.zip *
