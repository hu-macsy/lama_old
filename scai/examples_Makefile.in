UNAME := $(shell uname)
ifdef ($(UNAME),Darwin)
	DYNLIBEXT=dylib
else
	DYNLIBEXT=so
endif

include make.inc

INCLUDE_FLAGS = -I${SCAI_ROOT}/include

ifdef SCAI_BOOST_INCLUDE_DIR
    INCLUDE_FLAGS += -I${SCAI_BOOST_INCLUDE_DIR}
endif

ifdef SCAI_CUDA_INCLUDE_DIR
    INCLUDE_FLAGS += -I${SCAI_CUDA_INCLUDE_DIR}
endif

ifdef ADDITIONAL_EXAMPLE_LINK_LIBRARIES
	LINK_LIBRARY = -l${ADDITIONAL_EXAMPLE_LINK_LIBRARIES}
endif

ifdef SCAI_LIBS
	M_SO = $(foreach a, ${SCAI_LIBS}, $(a).$(DYNLIBEXT) )
	M_LIBS = $(foreach a, ${SCAI_LIBS}, -l$(a) )
	MODULE_LIB = -L. ${M_LIBS}
endif

LD_FLAGS = ${SCAI_LD_FLAGS} ${LINK_LIBRARY} -Wl,-rpath,${SCAI_ROOT}/lib:${SCAI_CUDA_LIBRARY_PATH}

All: ${M_SO} ${SCAI_EXECUTABLES} ${SCAI_MODULES}

.SUFFIXES:

.SUFFIXES: .cpp .o
.SUFFIXES: .cu .o
.SUFFIXES: .o .exe
.SUFFIXES: .o .$(DYNLIBEXT)

.o.exe: 
	${CXX} -o $*.exe $*.o ${MODULE_LIB} ${CXX_FLAGS} ${LD_FLAGS}:$(CURDIR)

.o.$(DYNLIBEXT):
	${CXX} -o lib$*.$(DYNLIBEXT) $*.o ${LD_FLAGS} -shared

.cpp.o:
	${CXX} -fPIC ${CXX_FLAGS} ${SCAI_DEFINES} ${INCLUDE_FLAGS} -c $*.cpp

.cu.o:
	${CXX_CUDA} ${CXX_CUDA_FLAGS} ${SCAI_DEFINES} ${INCLUDE_FLAGS} -c $*.cu

clean:
	rm -rf *.exe *.o *.so *.frm *.frv *.amg *.vec *.trace *.ct *.time
