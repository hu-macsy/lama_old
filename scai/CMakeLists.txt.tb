###
 # @file CMakeLists.txt.tb
 #
 # @license
 # Copyright (c) 2009-2017
 # Fraunhofer Institute for Algorithms and Scientific Computing SCAI
 # for Fraunhofer-Gesellschaft
 #
 # This file is part of the SCAI framework LAMA.
 #
 # LAMA is free software: you can redistribute it and/or modify it under the
 # terms of the GNU Affero General Public License as published by the Free
 # Software Foundation, either version 3 of the License, or (at your option)
 # any later version.
 #
 # LAMA is distributed in the hope that it will be useful, but WITHOUT ANY
 # WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 # FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for
 # more details.
 #
 # You should have received a copy of the GNU Affero General Public License
 # along with LAMA. If not, see <http://www.gnu.org/licenses/>.
 #
 # Other Usage
 # Alternatively, this file may be used in accordance with the terms and
 # conditions contained in a signed written agreement between you and
 # Fraunhofer SCAI. Please contact our distributor via info[at]scapos.com.
 # @endlicense
 #
 # @brief Main specification file for CMake
 # @author Thomas Brandes
 # @date 30.07.2015
###

cmake_minimum_required ( VERSION 2.8.8 )

project ( LAMA_ALL CXX )

### Set Module Path

set ( CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../CMake/Modules" )

set ( SCAI_COMPLETE_BUILD FALSE )

# Project: common library

add_subdirectory( common )

### Set variables for Findscai_common so other projects can use it 

set ( SCAI_COMMON_LIBRARY scai_common 
      CACHE FILEPATH "common library" )

set ( SCAI_COMMON_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/common
      CACHE PATH "common include directory" )

# Project: logging library

add_subdirectory( logging )

### Set variables for Findscai_common so other projects can use it 

set ( SCAI_LOGGING_LIBRARY scai_logging 
      CACHE FILEPATH "logging library" )

set ( SCAI_LOGGING_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/logging
      CACHE PATH "logging include directory" )

# Project: tracing library

add_subdirectory( tracing )

### Set variables for Findscai_tracing so other projects can use it 

set ( SCAI_TRACING_LIBRARY scai_tracing
      CACHE FILEPATH "tracing library" )

set ( SCAI_TRACING_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/tracing
      CACHE PATH "tracing include directory" )

# Project: tasking library

add_subdirectory( tasking )

### Set variables for Findscai_tasking so other projects can use it 

set ( SCAI_TASKING_LIBRARY scai_tasking 
      CACHE FILEPATH  "library for tasking" )

set ( SCAI_TASKING_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/tasking
      CACHE PATH "tasking include directory" )

# Project: kregistry library

add_subdirectory( kregistry )

### Set variables for Findscai_kregistry so other projects can use it 

set ( SCAI_KREGISTRY_LIBRARY scai_kregistry
      CACHE FILEPATH  "library for kernel registry" )

set ( SCAI_KREGISTRY_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/kregistry
      CACHE PATH "kernel registry include directory" )

# Project: hmemo library

add_subdirectory( hmemo )

### Set variables for Findscai_hmemo so further projects can use it 

set ( SCAI_HMEMO_LIBRARY scai_hmemo 
      CACHE FILEPATH  "library for hybrid memory on multiple devices" )

set ( SCAI_HMEMO_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/hmemo
      CACHE PATH "hmemo include directory" )

# Project: blaskernel library

add_subdirectory( blaskernel )

### Set variables for Findscai_blaskernel so further projects can use it 

set ( SCAI_BLASKERNEL_LIBRARY scai_blaskernel
      CACHE FILEPATH  "library for kernels implemented by BLAS" )

set ( SCAI_BLASKERNEL_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/blaskernel
      CACHE PATH "blaskernel include directory" )
      
# Project: utilskernel library

add_subdirectory( utilskernel )

### Set variables for Findscai_utilskernel so further projects can use it 

set ( SCAI_UTILSKERNEL_LIBRARY scai_utilskernel
      CACHE FILEPATH  "library for kernel utilities" )

set ( SCAI_UTILSKERNEL_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/utilskernel
      CACHE PATH "utilskernel include directory" )
      
# Project: sparsekernel library

add_subdirectory( sparsekernel )

### Set variables for Findscai_sparsekernel so further projects can use it 

set ( SCAI_SPARSEKERNEL_LIBRARY scai_sparsekernel
      CACHE FILEPATH  "library for sparse kernels" )

set ( SCAI_SPARSEKERNEL_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/sparsekernel
      CACHE PATH "blaskernel include directory" )

# Project: dmemo library

add_subdirectory( dmemo )

### Set variables for Findscai_lama so further projects can use it 

set ( SCAI_DMEMO_LIBRARY scai_dmemo
      CACHE FILEPATH  "library for distributed memory computation" )

set ( SCAI_DMEMO_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/dmemo
      CACHE PATH "dmemo include directory" )

# Project: lama library

add_subdirectory( lama )

### Set variables for Findscai_lama so further projects can use it 

set ( SCAI_LAMA_LIBRARY scai_lama
      CACHE FILEPATH  "library for accelerated math applications" )

set ( SCAI_LAMA_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/lama
      CACHE PATH "lama include directory" )

# Project: solver library

add_subdirectory( solver )

### Set variables for Findscai_solver so further projects can use it 

set ( SCAI_SOLVER_LIBRARY scai_solver
      CACHE FILEPATH  "library for solver basing on lama" )

set ( SCAI_SOLVER_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/solver
      CACHE PATH "solver include directory" )

# Documentation

find_package ( Sphinx )
include ( Package/Sphinx )
find_package ( Doxygen )
include ( Package/Doxygen )

## add custum target distClean

include ( CustomCommands/DistClean )

## summary of what is found
include ( Summaries/scai )

