#!/bin/bash -e

###
 # @file code_coverage.sh
 #
 # @license
 # Copyright (c) 2009-2016
 # Fraunhofer Institute for Algorithms and Scientific Computing SCAI
 # for Fraunhofer-Gesellschaft
 #
 # This file is part of the SCAI framework LAMA.
 #
 # LAMA is free software: you can redistribute it and/or modify it under the
 # terms of the GNU Affero General Public License as published by the Free
 # Software Foundation, either version 3 of the License, or (at your option)
 # any later version.
 #
 # LAMA is distributed in the hope that it will be useful, but WITHOUT ANY
 # WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 # FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for
 # more details.
 #
 # You should have received a copy of the GNU Affero General Public License
 # along with LAMA. If not, see <http://www.gnu.org/licenses/>.
 #
 # Other Usage
 # Alternatively, this file may be used in accordance with the terms and
 # conditions contained in a signed written agreement between you and
 # Fraunhofer SCAI. Please contact our distributor via info[at]scapos.com.
 # @endlicense
 #
 # @brief This file is a shellscript, which contains all necessary steps to 
 #        measure code coverage of LAMA.
 # @author Alexander BÃ¼chel, Lauretta Schubert
 # @date 15.08.2012
###

source scai_code_coverage_functions.sh

dirname=$(create_dir)
echo "Create coverage directory: ${dirname}"
prepare_coverage $dirname ../..

export SCAI_LOG=WARN
export SCAI_TRACE=time
	
# check if installed LAMA version supports MPI communicator

LAMA_SUPPORTS_MPI=0
./lamaTest --SCAI_COMMUNICATOR=MPI --run_test=VersionTest > /dev/null >& /dev/null
if [ "$?" -eq 0 ]
then
   LAMA_SUPPORTS_MPI=1
fi

# Running lama tests
echo "Running serial lama tests"
./lamaTest --SCAI_CONTEXT=Host >/dev/null
if [ $? -ne 0 ]
then
	echo "ERROR in lama_test"
	error_count=$(($error_count + $?))
fi

#Running lama storage tests
echo "Running serial lama storage tests"
./storage/lamaStorageTest --SCAI_CONTEXT=Host >/dev/null
if [ $? -ne 0 ]
then
    echo "ERROR in lamaStorageTest"
    error_count=$(($error_count + $?))
fi

#Running lama matrix tests
echo "Running serial lama matrix tests"
./matrix/lamaMatrixTest --SCAI_CONTEXT=Host >/dev/null
if [ $? -ne 0 ]
then
    echo "ERROR in lamaMatrixTest"
    error_count=$(($error_count + $?))
fi

if [ "${LAMA_SUPPORTS_MPI}" -eq 1 ];
then
    echo "Running lamaTest with  3 processes"
    mpirun -np 3 ./lamaTest --SCAI_CONTEXT=Host --SCAI_NUM_THREADS=1 >/dev/null
    if [ $? -ne 0 ]
    then
        echo "ERROR in lamaTest with 3 processes"
        error_count=$(($error_count + $?))
    fi
    echo "Running lamaMatrixTest with 3 processes"
    mpirun -np 3 ./matrix/lamaMatrixTest --SCAI_CONTEXT=Host --SCAI_NUM_THREADS=1 >/dev/null
    if [ $? -ne 0 ]
    then
        echo "ERROR in lamaMatrixTest with 3 processes"
        error_count=$(($error_count + $?))
    fi
fi

do_coverage $dirname ../.. "@CMAKE_SOURCE_DIR@"

if [ $? == 1 ];
then
    exit 1
fi

zip -qr ../lama_coverage.zip *

echo "Code coverage run finished, results in directory: ${dirname}"
