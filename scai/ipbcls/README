Executable 1:
-------------

lsbc <filename_A> <filename_b> <filename_lb> <filename_ub> [ <filename_x> ]

Just runs the least square solver with boundary contition

filename_A : contains matrix A ( size is m x n )
filename_b : contains rhs ( size must be m )
filename_lb : contains lb vector ( size must be n )
filename_lb : contains ub vector ( size must be n )

filename_x : if specified will contain solution wiht lb <= x <= ub, and || A x - b || is minimal

Executable 2:
-------------

prepare <input_D> <input_T> <input_So> <input_hrz> 
        <output_A> <output_b> <output_lb> <output_ub>
        [ --SCAI_STRENGTH=<strength> ]
        [ --SCAI_VARIATION=<variation

Prepares ray data for solution with least square 

input_D : contains matrix nray x n ( with n = ny x  nz )
T       : rhs ( size is nray )
So      : initial solution

VARIATION:  percentage for variation of So to build lb, ub
STRENGTH:   factor to weight the smooth matrix

Executable 3:
-------------

doAll <input_D> <input_T> <input_So> <input_hrz> [ <output_x] 
      [ --SCAI_STRENGTH=<strength> ]
      [ --SCAI_VARIATION=<variation> ]

- is just the combination of executable 1 and 2
- but uses some kind of BlockMatrix and BlockVector, i.e. it will not build A explicitly
