stages:
  # Provides a basic sanity check for a small portion of the LAMA library.
  # Is quick to build and run, and it might capture e.g. certain differences
  # in environment
  - basic build test
  # Build, test and install the entire LAMA library. Most jobs run in this stage
  - build test install
  
variables:
  BUILD_THREADS: 8
  BUILD_DIR: $CI_PROJECT_DIR/build
  INSTALL_DIR: $CI_PROJECT_DIR/installed
  OMP_NUM_THREADS: 8

  # Default configuration for LAMA build
  LAMA_BUILD_TYPE: Release
  USE_OPENMP: 1
  USE_CUDA: 0
  USE_JAVA: 0
  USE_MPI: 0
  USE_METIS: 0
  USE_MIC: 0
  USE_BOOST_TEST: 1

  # For Boost versions that are recent enough, make the output colored
  BOOST_TEST_COLOR_OUTPUT: 1

.before_every_job: &before_every_job
    |
      echo -e "Build directory: $BUILD_DIR"
      echo -e "Install directory: $INSTALL_DIR"

.build test install template: &build_test_install_template
  script:
    - mkdir $BUILD_DIR
    - cd $BUILD_DIR
    - >
        cmake ../scai
        -DUSE_OPENMP=$USE_OPENMP
        -DUSE_CUDA=$USE_CUDA
        -DUSE_JAVA=$USE_JAVA
        -DUSE_MPI=$USE_MPI
        -DUSE_METIS=$USE_METIS
        -DUSE_MIC=$USE_MIC
        -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR
        -DUSE_BOOST_TEST=$USE_BOOST_TEST
        -DCMAKE_BUILD_TYPE=$LAMA_BUILD_TYPE
        $EXTRA_CMAKE_OPTS
    - make -j$BUILD_THREADS
    - make -j$BUILD_THREADS examples tests
    - ctest --output-on-failure
    - make install

###############################################################
# CONFIGURATIONS INTENDED TO RUN ON EVERY COMMIT TO ANY BRANCH
###############################################################

lama common basic build serial gcc 4.9.1 (debug):
  # This is the most basic build configuration.
  # It is only intended as a quick and basic sanity check,
  # so that using compute resources for running the full
  # configurations can be avoided if this one fails
  <<: *build_test_install_template
  stage: basic build test
  before_script:
    - *before_every_job
    - module load tools/cmake/3.5.2
    - module load gcc/4.9.1
    - module load libs/boost/1.56
  variables:
    LAMA_BUILD_TYPE: Debug
    USE_OPENMP: 0
    USE_CUDA: 0
    OMP_NUM_THREADS: 1
    BOOST_ROOT: /cluster/libs/boost/1.56
    BOOST_INCLUDEDIR: /cluster/libs/boost/1.56/include
    BOOST_LIBRARYDIR: /cluster/libs/boost/1.56/lib
    # Note the SCAI_MODULES definition
    EXTRA_CMAKE_OPTS: -DBoost_NO_BOOST_CMAKE=1 -DSCAI_MODULES=common
  tags:
    - draco

lama build serial gcc 4.9.1 (release):
  <<: *build_test_install_template
  stage: build test install
  before_script:
    - *before_every_job
    - module load tools/cmake/3.5.2
    - module load gcc/4.9.1
    - module load libs/boost/1.56
  variables:
    LAMA_BUILD_TYPE: Release
    USE_CUDA: 0
    OMP_NUM_THREADS: 1
    # It seems to be necessary to specifically specify the Boost installation
    BOOST_ROOT: /cluster/libs/boost/1.56
    BOOST_INCLUDEDIR: /cluster/libs/boost/1.56/include
    BOOST_LIBRARYDIR: /cluster/libs/boost/1.56/lib
    EXTRA_CMAKE_OPTS: -DBoost_NO_BOOST_CMAKE=1
  tags:
    - draco

lama build serial gcc 4.9.1 (debug):
  <<: *build_test_install_template
  stage: build test install
  before_script:
    - *before_every_job
    - module load tools/cmake/3.5.2
    - module load gcc/4.9.1
    - module load libs/boost/1.56
  variables:
    LAMA_BUILD_TYPE: Debug
    USE_CUDA: 0
    OMP_NUM_THREADS: 1
    # It seems to be necessary to specifically specify the Boost installation
    BOOST_ROOT: /cluster/libs/boost/1.56
    BOOST_INCLUDEDIR: /cluster/libs/boost/1.56/include
    BOOST_LIBRARYDIR: /cluster/libs/boost/1.56/lib
    EXTRA_CMAKE_OPTS: -DBoost_NO_BOOST_CMAKE=1
  tags:
    - draco

lama build parallel gcc 6.3.0 (release):
  <<: *build_test_install_template
  stage: build test install
  before_script:
    - *before_every_job
    - module load tools/cmake/3.5.2
    # Need to use more recent Boost version, because the precompiled 1.56 version
    # is not compatible with GCC 6.3.0
    - module load libs/boost/1.62.0-gcc-5.4.0-ompi-2.0.1-python-3.5.2
    - module unload gcc
    - module load gcc/6.3.0
    # LIBRARY_PATH messes up which library gets linked, see issue #40
    - unset LIBRARY_PATH
  variables:
    LAMA_BUILD_TYPE: Release
    USE_CUDA: 0
    OMP_NUM_THREADS: 4
    # It seems to be necessary to specifically specify the Boost installation
    BOOST_ROOT: /cluster/libs/boost/1.62.0-gcc-5.4.0-ompi-2.0.1-python-3.5.2
    BOOST_INCLUDEDIR: /cluster/libs/boost/1.62.0-gcc-5.4.0-ompi-2.0.1-python-3.5.2/include
    BOOST_LIBRARYDIR: /cluster/libs/boost/1.62.0-gcc-5.4.0-ompi-2.0.1-python-3.5.2/lib
    EXTRA_CMAKE_OPTS: -DBoost_NO_BOOST_CMAKE=1
  tags:
    - draco


##################################################################
# CONFIGURATIONS INTENDED TO RUN ON EVERY COMMIT TO MASTER/DEVELOP
##################################################################
